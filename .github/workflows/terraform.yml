name: upload website
on: 
    push:
        branches:
            # Here we choose to deploy only when a push is detect on the main branch
            - main

env:
    #verbosity setting for Terraform logs
    TF_LOG: INFO
     # Credentials for deployment to AWS
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #S3 bucket name to create before running terrafrom? 

    BUCKET_NAME: bucket-chen-2
    
    # S3 bucket for the Terraform state
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}} 


jobs:
    create_bucket:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:

            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: ap-southeast-1 #update S3 bucket region here
          
            # Installs AWS CLI version 2
        - name: make s3 bucket with name in env
          run: |
            aws s3 mb s3://$BUCKET_NAME

  
  # Jobs define the functionality that will be run in the workflow and run in parallel by default
    build:
        runs-on: ubuntu-latest
        needs: create_bucket
        steps:
        - uses: actions/checkout@v2
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:

            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: ap-southeast-1 #update S3 bucket region here
          
            # Installs AWS CLI version 2
        - name: Install AWS CLI v2
          run: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install --update #update flag worked

        # Syncs the repo with the S3 bucket
        - name: Sync with S3
          run: |
            aws s3 sync . s3://$BUCKET_NAME --delete --exclude "*" --include "index.html"
            
        # can use aws s3 sync <LocalPath> <S3Uri> or <S3Uri> <LocalPath> or <S3Uri> <S3Uri>
        #. represents current repo
     
     # this does not deploy -  i need to create a s3 myself first, this doesn't do anything?
        #- name: Deploy static website to S3 bucket
        #  run: aws s3 sync . s3://test-enchen --delete #update bucketname here
    